PROJECT(GraviT)
CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
IF(COMMAND cmake_policy)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(PROJECT_BASE_DIR ${PROJECT_SOURCE_DIR})
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_BASE_DIR}/CMake)


IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the build type: Debug Release RelWithDebInfo MinSizeRel." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

SET(GVT_BINARY_DIR ${PROJECT_BINARY_DIR})
SET(LIBRARY_OUTPUT_PATH ${GVT_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${GVT_BINARY_DIR}/bin)
LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})

MARK_AS_ADVANCED(LIBRARY_OUTPUT_PATH)
MARK_AS_ADVANCED(EXECUTABLE_OUTPUT_PATH)
MARK_AS_ADVANCED(CMAKE_INSTALL_PREFIX)
MARK_AS_ADVANCED(CMAKE_BACKWARDS_COMPATIBILITY)

SET(GVT_ICC OFF CACHE BOOL "Use Intel Compiler?")
MARK_AS_ADVANCED(GVT_ICC)
SET(GVT_MPI ON CACHE BOOL "Use MPI")
SET(GVT_XEON_TARGET "AVX" CACHE STRING "Target ISA on host (SSE,AVX,AVX2)")

IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
  SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
ENDIF()


##############################################################
# modules
##############################################################
INCLUDE(CMake/gravit.cmake)
INCLUDE(CMake/mpi.cmake)
INCLUDE(CMake/boost.cmake)
INCLUDE(CMake/doxygen.cmake)

FIND_PACKAGE(OptiX REQUIRED)
INCLUDE_DIRECTORIES(${OptiX_INCLUDE})
SET(LIBS ${LIBS} ${optix_LIBRARY})

SET(PROJECT_SOURCE_DIR ${PROJECT_SOURCE_DIR}/src)
MESSAGE(STATUS "PROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}")
message(STATUS "PROJECT_BINARY_DIR=${PROJECT_BINARY_DIR}")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})

SET (GVT_TARGET ${GVT_XEON_TARGET})
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/GVT builddir/gravit/)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/Frontend builddir/Frontend/)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/Backend builddir/Backend/)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/apps builddir/apps/)
