#FILE(WRITE "${CMAKE_BINARY_DIR}/CMakeDefines.h" "#define CMAKE_BUILD_DIR \"${CMAKE_BINARY_DIR}\"\n")

message(STATUS "GraviT compiler configuration")


INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})
SET(GVT_BINARY_DIR ${CMAKE_BINARY_DIR})
SET(GVT_DIR ${PROJECT_BASE_DIR})
#MACRO(CONFIGURE_GVT)
# SET(LIBRARY_OUTPUT_PATH ${GVT_BINARY_DIR})
# SET(EXECUTABLE_OUTPUT_PATH ${GVT_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})
# INCLUDE(${CMAKE_SOURCE_DIR}/icc.cmake)

	# IF (GVT_USE_ICC)
	# ELSE()
	# 	INCLUDE(${PROJECT_BASE_DIR}/CMake/gcc.cmake)
	# ENDIF()

        IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
            SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
            INCLUDE(${CMAKE_SOURCE_DIR}/CMake/clang.cmake)
        ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
            SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
            INCLUDE(${CMAKE_SOURCE_DIR}/CMake/gcc.cmake)
        ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
            SET(GVT_COMPILER ${CMAKE_CXX_COMPILER_ID} CACHE STRING "GraviT Compiler?")
            INCLUDE(${CMAKE_SOURCE_DIR}/CMake/icc.cmake)

        ELSE ()
            MESSAGE(FATAL_ERROR "Compiler not supported")
        ENDIF()



	IF (${GVT_VECTOR_TARGET} STREQUAL "AVX2")
		ADD_DEFINITIONS(-DGVT_SIMD_WIDTH=8)
		ADD_DEFINITIONS(-DGVT_TARGET_AVX2=1)
		SET(GVT_ISPC_TARGET "avx2")
	ELSEIF (${GVT_VECTOR_TARGET} STREQUAL "AVX")
		ADD_DEFINITIONS(-DGVT_SIMD_WIDTH=8)
		ADD_DEFINITIONS(-DGVT_TARGET_AVX=1)
		SET(GVT_ISPC_TARGET "avx")
        ELSEIF (${GVT_VECTOR_TARGET} STREQUAL "AVX512")
		ADD_DEFINITIONS(-DGVT_SIMD_WIDTH=16)
		ADD_DEFINITIONS(-DGVT_TARGET_AVX512=1)
		SET(GVT_ISPC_TARGET "avx512")

	ELSEIF (${GVT_VECTOR_TARGET} STREQUAL "SSE")
		ADD_DEFINITIONS(-DGVT_SIMD_WIDTH=4)
		ADD_DEFINITIONS(-DGVT_TARGET_SSE=1)
		SET(GVT_ISPC_TARGET "sse4")
	ELSE()
    ADD_DEFINITIONS(-DGVT_SIMD_WIDTH=1)
    ADD_DEFINITIONS(-DGVT_TARGET_SINGLE=1)
    SET(GVT_ISPC_TARGET "sse4")
		MESSAGE("unknown GVT_XEON_TARGET '${GVT_VECTOR_TARGET}'")
	ENDIF()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GVT_ARCH_FLAGS__${GVT_XEON_TARGET}}")

	IF (GVT_MPI)
		ADD_DEFINITIONS(-DGVT_MPI=1)
	ENDIF()
#ENDMACRO()
